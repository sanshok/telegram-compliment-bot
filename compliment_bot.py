import logging
import random
from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –í—Å—Ç–∞–≤—å—Ç–µ —Å—é–¥–∞ —Ç–æ–∫–µ–Ω, –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –æ—Ç @BotFather
TOKEN = "7587130595:AAGLm5TJzwKj0oOKzcAtALT2WiCemJMwOlw"

# –°–ø–∏—Å–æ–∫ –ø–æ—Ö–≤–∞–ª —Å–æ —Å–º–∞–π–ª–∏–∫–∞–º–∏
COMPLIMENTS = [
    "–¢—ã –ø—Ä–æ—Å—Ç–æ –≤–µ–ª–∏–∫–æ–ª–µ–ø–µ–Ω! üåü",
    "–£ —Ç–µ–±—è –ø–æ—Ç—Ä—è—Å–∞—é—â–∞—è —ç–Ω–µ—Ä–≥–∏—è! üí´",
    "–¢—ã –¥–µ–ª–∞–µ—à—å —ç—Ç–æ—Ç –º–∏—Ä –ª—É—á—à–µ! üíñ",
    "–¢—ã —Å–µ–≥–æ–¥–Ω—è –Ω–µ–≤–µ—Ä–æ—è—Ç–Ω–æ –≤—ã–≥–ª—è–¥–∏—à—å! üòç",
    "–¢–≤–æ–∏ –∏–¥–µ–∏ –≤–æ—Å—Ö–∏—Ç–∏—Ç–µ–ª—å–Ω—ã! üß†",
    "–¢—ã –≤–¥–æ—Ö–Ω–æ–≤–ª—è–µ—à—å –≤—Å–µ—Ö –≤–æ–∫—Ä—É–≥! ‚ú®",
    "–° —Ç–æ–±–æ–π —Ç–∞–∫ –ø—Ä–∏—è—Ç–Ω–æ –æ–±—â–∞—Ç—å—Å—è! üí¨",
    "–¢–≤–æ—è —É–ª—ã–±–∫–∞ –æ—Å–≤–µ—â–∞–µ—Ç –∫–æ–º–Ω–∞—Ç—É! ‚òÄÔ∏è",
    "–¢—ã –ø—Ä–µ–æ–¥–æ–ª–µ–≤–∞–µ—à—å –ª—é–±—ã–µ –ø—Ä–µ–≥—Ä–∞–¥—ã! üí™",
    "–¢–≤–æ—ë —á—É–≤—Å—Ç–≤–æ —é–º–æ—Ä–∞ –ø—Ä–æ—Å—Ç–æ –ø–æ—Ç—Ä—è—Å–∞—é—â–µ–µ! üòÇ",
    "–¢—ã —Å–∏–ª—å–Ω–µ–µ, —á–µ–º –¥—É–º–∞–µ—à—å! üî•",
    "–¢–≤–æ—è –¥–æ–±—Ä–æ—Ç–∞ –º–µ–Ω—è–µ—Ç –º–∏—Ä –∫ –ª—É—á—à–µ–º—É! üåà",
    "–¢—ã —É–Ω–∏–∫–∞–ª–µ–Ω –∏ –Ω–µ–ø–æ–≤—Ç–æ—Ä–∏–º! üíé",
    "–¢–≤–æ—è —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –∑–∞—Ä–∞–∑–∏—Ç–µ–ª—å–Ω–∞! üòé",
    "–¢—ã —Å–æ–∑–¥–∞–Ω –¥–ª—è –≤–µ–ª–∏–∫–∏—Ö –¥–µ–ª! üöÄ",
    "–¢—ã –ø—Ä–æ—Å—Ç–æ –∫–æ—Å–º–æ—Å! üöÄ",
    "–û—Ç —Ç–µ–±—è –∏—Å—Ö–æ–¥–∏—Ç –ø–æ–∑–∏—Ç–∏–≤–Ω–∞—è —ç–Ω–µ—Ä–≥–∏—è! ‚ö°",
    "–¢–≤–æ—è —É–ª—ã–±–∫–∞ –¥–µ–ª–∞–µ—Ç –º–∏—Ä —è—Ä—á–µ! üåà",
    "–¢—ã –Ω–∞—Å—Ç–æ—è—â–∏–π —Å—É–ø–µ—Ä–≥–µ—Ä–æ–π! ü¶∏‚Äç‚ôÇÔ∏è",
    "–¢–≤–æ—è –¥–æ–±—Ä–æ—Ç–∞ –Ω–µ –∑–Ω–∞–µ—Ç –≥—Ä–∞–Ω–∏—Ü! üíñ",
    "–¢—ã –∑–∞—Ä—è–∂–∞–µ—à—å –≤—Å–µ—Ö –≤–æ–∫—Ä—É–≥ –ø–æ–∑–∏—Ç–∏–≤–æ–º! üîã",
    "–¢—ã –ø—Ä–µ–∫—Ä–∞—Å–µ–Ω –∫–∞–∫ –≤–Ω—É—Ç—Ä–∏, —Ç–∞–∫ –∏ —Å–Ω–∞—Ä—É–∂–∏! üå∏",
    "–¢–≤–æ—è —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –≤–æ—Å—Ö–∏—â–∞–µ—Ç! üíØ",
    "–¢—ã –º–æ—Ç–∏–≤–∏—Ä—É–µ—à—å —Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è –ª—É—á—à–µ! üìà",
    "–¢—ã —Å–≤–µ—Ç–∏—à—å—Å—è –∏–∑–Ω—É—Ç—Ä–∏! ‚ú®",
    "–¢–≤–æ—ë –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–∏–µ –¥–µ–ª–∞–µ—Ç –ª—é–±–æ–π –¥–µ–Ω—å –ª—É—á—à–µ! üåû",
    "–¢—ã –Ω–∞—Å—Ç–æ—è—â–∞—è –∑–≤–µ–∑–¥–∞! ‚≠ê",
    "–¢–≤–æ—ë —Å–µ—Ä–¥—Ü–µ –ø–æ–ª–Ω–æ –¥–æ–±—Ä–æ—Ç—ã! üíó",
    "–¢—ã –≤–¥–æ—Ö–Ω–æ–≤–ª—è–µ—à—å –Ω–∞ –≤–µ–ª–∏–∫–∏–µ –¥–µ–ª–∞! üéØ",
    "–¢—ã –¥–µ–ª–∞–µ—à—å –≤—Å—ë —Å —Ç–∞–∫–æ–π –ª—ë–≥–∫–æ—Å—Ç—å—é! ü¶ã"
]

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        await update.message.reply_text(
            "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç —Ç–µ–±—è —Ö–≤–∞–ª–∏—Ç—å! ‚ú®\n\n"
            "–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ –º–Ω–µ —á—Ç–æ-–Ω–∏–±—É–¥—å, –∏ —è –æ—Ç–ø—Ä–∞–≤–ª—é —Ç–µ–±–µ –ø—Ä–∏—è—Ç–Ω—ã–µ —Å–ª–æ–≤–∞! üòä"
        )
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ start: {e}")

async def praise(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        compliment = random.choice(COMPLIMENTS)
        await update.message.reply_text(compliment)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ—Ö–≤–∞–ª—ã: {e}")

async def error_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    logger.error(f"–û—à–∏–±–∫–∞: {context.error}", exc_info=context.error)

def main():
    app = Application.builder().token(TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, praise))
    app.add_error_handler(error_handler)
    
    logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    app.run_polling()

if __name__ == "__main__":
    main()